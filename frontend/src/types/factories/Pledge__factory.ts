/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Pledge, PledgeInterface } from "../Pledge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_donationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "CommitmentCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "StakeClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "claimStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_durationInDays",
        type: "uint256",
      },
    ],
    name: "createCommitment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "donationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getCommitmentDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct Pledge.Commitment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserCommitments",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "markAsCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b4c38038062001b4c8339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b608051611a1b62000131600039600081816107250152610c2e0152611a1b6000f3fe6080604052600436106100865760003560e01c806378bb86d31161005957806378bb86d31461014f5780639a5468481461017a578063adbf7dd2146101b7578063c0a6026c146101f4578063ec034bed1461021d57610086565b80632fc9a1011461008b57806331091d7a146100a757806344c7d6ef146100e457806349ce89971461010d575b600080fd5b6100a560048036038101906100a09190610e30565b610248565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190610eea565b6104d6565b6040516100db9190610fd5565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190610ff7565b61056d565b005b34801561011957600080fd5b50610134600480360381019061012f9190610ff7565b610808565b604051610146969594939291906110dc565b60405180910390f35b34801561015b57600080fd5b50610164610906565b6040516101719190611144565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c919061115f565b61090c565b6040516101ae9190611144565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610ff7565b61093d565b6040516101eb9190611290565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610ff7565b610a9c565b005b34801561022957600080fd5b50610232610c2c565b60405161023f91906112b2565b60405180910390f35b6000341161028b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102829061133f565b60405180910390fd5b60008251116102cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c6906113ab565b60405180910390fd5b60008060008154809291906102e3906113fa565b919050559050600062015180836102fa9190611442565b426103059190611484565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001828152602001348152602001600015158152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816103bf91906116c4565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff021916908315150217905550905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827f26cc583dd40752423e093d7bab55bd760acb2f189b7f5b8a4c8489f0135043678684346040516104c893929190611796565b60405180910390a350505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561056157602002820191906000526020600020905b81548152602001906001019080831161054d575b50505050509050919050565b60006001600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611820565b60405180910390fd5b8060040160019054906101000a900460ff1615610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061188c565b60405180910390fd5b60018160040160016101000a81548160ff02191690831515021790555060008160040160009054906101000a900460ff1680156106a9575081600201544211155b15610723573373ffffffffffffffffffffffffffffffffffffffff1682600301546040516106d6906118dd565b60006040518083038185875af1925050503d8060008114610713576040519150601f19603f3d011682016040523d82523d6000602084013e610718565b606091505b5050809150506107b4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826003015460405161076b906118dd565b60006040518083038185875af1925050503d80600081146107a8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ad565b606091505b5050809150505b3373ffffffffffffffffffffffffffffffffffffffff16837fbfe74cbeb739c5dbd2f136f3d1efce73fe9301e143391d8492b52cf7d1b98ba9836040516107fb91906118f2565b60405180910390a3505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610851906114e7565b80601f016020809104026020016040519081016040528092919081815260200182805461087d906114e7565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16905086565b60005481565b6002602052816000526040600020818154811061092857600080fd5b90600052602060002001600091509150505481565b610945610c50565b600160008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546109c9906114e7565b80601f01602080910402602001604051908101604052809291908181526020018280546109f5906114e7565b8015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581526020016004820160019054906101000a900460ff1615151515815250509050919050565b60006001600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3c90611820565b60405180910390fd5b8060040160009054906101000a900460ff1615610b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8e90611959565b60405180910390fd5b8060020154421115610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd5906119c5565b60405180910390fd5b60018160040160006101000a81548160ff021916908315150217905550817f66d70a7054bd6679280e30d2a1fe57cee00c95238220d743213543e1132cc3da60405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081526020016000151581526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0782610cbe565b810181811067ffffffffffffffff82111715610d2657610d25610ccf565b5b80604052505050565b6000610d39610ca0565b9050610d458282610cfe565b919050565b600067ffffffffffffffff821115610d6557610d64610ccf565b5b610d6e82610cbe565b9050602081019050919050565b82818337600083830152505050565b6000610d9d610d9884610d4a565b610d2f565b905082815260208101848484011115610db957610db8610cb9565b5b610dc4848285610d7b565b509392505050565b600082601f830112610de157610de0610cb4565b5b8135610df1848260208601610d8a565b91505092915050565b6000819050919050565b610e0d81610dfa565b8114610e1857600080fd5b50565b600081359050610e2a81610e04565b92915050565b60008060408385031215610e4757610e46610caa565b5b600083013567ffffffffffffffff811115610e6557610e64610caf565b5b610e7185828601610dcc565b9250506020610e8285828601610e1b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eb782610e8c565b9050919050565b610ec781610eac565b8114610ed257600080fd5b50565b600081359050610ee481610ebe565b92915050565b600060208284031215610f0057610eff610caa565b5b6000610f0e84828501610ed5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f4c81610dfa565b82525050565b6000610f5e8383610f43565b60208301905092915050565b6000602082019050919050565b6000610f8282610f17565b610f8c8185610f22565b9350610f9783610f33565b8060005b83811015610fc8578151610faf8882610f52565b9750610fba83610f6a565b925050600181019050610f9b565b5085935050505092915050565b60006020820190508181036000830152610fef8184610f77565b905092915050565b60006020828403121561100d5761100c610caa565b5b600061101b84828501610e1b565b91505092915050565b61102d81610eac565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106d578082015181840152602081019050611052565b60008484015250505050565b600061108482611033565b61108e818561103e565b935061109e81856020860161104f565b6110a781610cbe565b840191505092915050565b6110bb81610dfa565b82525050565b60008115159050919050565b6110d6816110c1565b82525050565b600060c0820190506110f16000830189611024565b81810360208301526111038188611079565b905061111260408301876110b2565b61111f60608301866110b2565b61112c60808301856110cd565b61113960a08301846110cd565b979650505050505050565b600060208201905061115960008301846110b2565b92915050565b6000806040838503121561117657611175610caa565b5b600061118485828601610ed5565b925050602061119585828601610e1b565b9150509250929050565b6111a881610eac565b82525050565b600082825260208201905092915050565b60006111ca82611033565b6111d481856111ae565b93506111e481856020860161104f565b6111ed81610cbe565b840191505092915050565b611201816110c1565b82525050565b600060c08301600083015161121f600086018261119f565b506020830151848203602086015261123782826111bf565b915050604083015161124c6040860182610f43565b50606083015161125f6060860182610f43565b50608083015161127260808601826111f8565b5060a083015161128560a08601826111f8565b508091505092915050565b600060208201905081810360008301526112aa8184611207565b905092915050565b60006020820190506112c76000830184611024565b92915050565b7f5374616b6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b600061132960238361103e565b9150611334826112cd565b604082019050919050565b600060208201905081810360008301526113588161131c565b9050919050565b7f4465736372697074696f6e2063616e6e6f7420626520656d7074790000000000600082015250565b6000611395601b8361103e565b91506113a08261135f565b602082019050919050565b600060208201905081810360008301526113c481611388565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140582610dfa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611437576114366113cb565b5b600182019050919050565b600061144d82610dfa565b915061145883610dfa565b925082820261146681610dfa565b9150828204841483151761147d5761147c6113cb565b5b5092915050565b600061148f82610dfa565b915061149a83610dfa565b92508282019050808211156114b2576114b16113cb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114ff57607f821691505b602082108103611512576115116114b8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261157a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261153d565b611584868361153d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115c16115bc6115b784610dfa565b61159c565b610dfa565b9050919050565b6000819050919050565b6115db836115a6565b6115ef6115e7826115c8565b84845461154a565b825550505050565b600090565b6116046115f7565b61160f8184846115d2565b505050565b5b81811015611633576116286000826115fc565b600181019050611615565b5050565b601f8211156116785761164981611518565b6116528461152d565b81016020851015611661578190505b61167561166d8561152d565b830182611614565b50505b505050565b600082821c905092915050565b600061169b6000198460080261167d565b1980831691505092915050565b60006116b4838361168a565b9150826002028217905092915050565b6116cd82611033565b67ffffffffffffffff8111156116e6576116e5610ccf565b5b6116f082546114e7565b6116fb828285611637565b600060209050601f83116001811461172e576000841561171c578287015190505b61172685826116a8565b86555061178e565b601f19841661173c86611518565b60005b828110156117645784890151825560018201915060208501945060208101905061173f565b86831015611781578489015161177d601f89168261168a565b8355505b6001600288020188555050505b505050505050565b600060608201905081810360008301526117b08186611079565b90506117bf60208301856110b2565b6117cc60408301846110b2565b949350505050565b7f4e6f7420796f757220636f6d6d69746d656e7400000000000000000000000000600082015250565b600061180a60138361103e565b9150611815826117d4565b602082019050919050565b60006020820190508181036000830152611839816117fd565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611876600f8361103e565b915061188182611840565b602082019050919050565b600060208201905081810360008301526118a581611869565b9050919050565b600081905092915050565b50565b60006118c76000836118ac565b91506118d2826118b7565b600082019050919050565b60006118e8826118ba565b9150819050919050565b600060208201905061190760008301846110cd565b92915050565b7f416c726561647920636f6d706c65746564000000000000000000000000000000600082015250565b600061194360118361103e565b915061194e8261190d565b602082019050919050565b6000602082019050818103600083015261197281611936565b9050919050565b7f446561646c696e65207061737365640000000000000000000000000000000000600082015250565b60006119af600f8361103e565b91506119ba82611979565b602082019050919050565b600060208201905081810360008301526119de816119a2565b905091905056fea26469706673582212208b7fdc2a4b3cff9cdad8e38d0ba38ac2c2fc1d42a1c423ece9e721136bbeb91264736f6c63430008140033";

type PledgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PledgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pledge__factory extends ContractFactory {
  constructor(...args: PledgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _donationAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_donationAddress, overrides || {});
  }
  override deploy(
    _donationAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_donationAddress, overrides || {}) as Promise<
      Pledge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Pledge__factory {
    return super.connect(runner) as Pledge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PledgeInterface {
    return new Interface(_abi) as PledgeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Pledge {
    return new Contract(address, _abi, runner) as unknown as Pledge;
  }
}
